name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16


    - name: Set Environment Variables
      run: |
        echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> $GITHUB_ENV
        echo NEXT_PUBLIC_BACKEND_URL=https://flight-backend-efms.onrender.com >> $GITHUB_ENV
        echo CYPRESS_BASE_URL=https://flight-frontend-q55m.onrender.com >> $GITHUB_ENV

  
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm install

    - name: Wait for Backend to be ready
      run: npx wait-on https://flight-backend-efms.onrender.com
      
    - name: Fix Jest Permissions
      working-directory: ./backend
      run: chmod +x ./node_modules/.bin/jest

    # Frontend - Install dependencies, build, and test
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install

    - name: Install Cypress
      working-directory: ./frontend
      run: |
        npm install cypress --save-dev
        chmod +x ./node_modules/.bin/cypress

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    - name: Wait for Frontend to be ready
      run: npx wait-on ${{ env.CYPRESS_BASE_URL }}

    - name: Run Cypress Tests
      working-directory: ./frontend
      env:
        CYPRESS_BASE_URL: ${{ env.CYPRESS_BASE_URL }}
      run: npx cypress run

  docker-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Set up Docker Compose
      run: |
        docker-compose down
        docker-compose up --build -d

    - name: Verify Services are Running
      run: docker ps
